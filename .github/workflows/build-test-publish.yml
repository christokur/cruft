name: Build, Test and Publish

on:
  push:
    branches: [ "b2b" ]
#  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  build-and-publish:
    strategy:
      matrix:
        # Put the version we consider mainline and publish with last
        python-version: ["3.11"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_REGION_TOOLS: "us-east-2"
      AWS_ACCOUNT_TOOLS: "433714148419"
      AWS_PROFILE_TOOLS: "cloud-services-prod"
      PYTHON_KEYRING_BACKEND: keyring.backends.null.Keyring
      JIRA_API_KEY: ${{ secrets.JIRA_API_KEY }}
      JIRA_USERNAME: ${{ secrets.JIRA_USERNAME }}
    steps:
    - uses: actions/checkout@v4
      with:
        # Number of commits to fetch. 0 indicates all history for all branches and tags.
        # Default: 1
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v5
      id: setup_python
      with:
        python-version: ${{ matrix.python-version }}
        #cache: poetry

    - name: Install poetry
      run: |
        echo python-path:'${{ steps.setup_python.outputs.python-path }}'
        ${{ steps.setup_python.outputs.python-path }} --version
        ${{ steps.setup_python.outputs.python-path }} -m pip install poetry==1.8.3
      shell: bash

    - name: configure-aws-credentials
      uses: SandsB2B/configure-aws-credentials-action@main
      with:
        role_name: "github-codeartifact-readwrite"
        account_id: "433714148419"
        aws_region: "us-east-2"
        aws_profile: "cloud-services-prod"

    - name: Check AWS profiles
      continue-on-error: false
      run: |
        set  +e
        aws configure list-profiles
        aws sts get-caller-identity --profile=$AWS_PROFILE_TOOLS

        set | egrep -e '^(AWS_|CI_)'
      shell: bash

#    - name: Configure additional AWS Credentials
#      continue-on-error: false
#      run: |
#        set +e
#        [ type aws_configure_profile 2>/dev/null ] || . $GITHUB_WORKSPACE/cicd/rc/configure_aws_credentials.rc
#        aws_check_environment_secrets
#
#        # For CodeArtifact and in case the consumer does not include in the custom list
#        aws_check_profiles_and_accounts $AWS_PROFILE_TOOLS:${AWS_ACCOUNT_TOOLS}
#      shell: bash

    - name: Set up access to CodeArtifact
      run: |
        [ type aws_setup_codeartifact_access 2>/dev/null ] || . $GITHUB_WORKSPACE/cicd/rc/configure_aws_codeartifact.rc
        aws_setup_codeartifact_access
      shell: bash

    - name: Install dependencies and build
      run: |
        #poetry env use ${{ matrix.python-version }}
        poetry check --lock
        poetry config --list

        #poetry install --with dev --no-ansi --no-interaction
        poetry install --with main,dev,test --no-ansi --no-interaction --verbose
        poetry run pip list

        python -m pip install build
        python -m build --sdist --wheel --outdir dist/ .
      shell: bash

#    - name: Test coverage
#      run: |
#        poetry env info
#        poetry run poe test-cov
#      shell: bash

    - name: Publish
      if: matrix.python-version == '3.11' && matrix.os == 'ubuntu-latest'
      run: |
        pip install wheel twine
        cat ~/.pypirc
        for whl in dist/*.whl; do
          twine upload --verbose --repository codeartifact $whl
        done
      shell: bash

    - name: Component and Versions
      run: |
        #export LOG_LEVEL=DEBUG

        export DEBUG=yes
        export VERBOSE=yes
        poetry run $GITHUB_WORKSPACE/scripts/jira-component-and-version.py
      shell: bash

#!/bin/bash

#set | sort
#set -x
set +e

function aws_check_environment_secrets() {
    #set -x

    export AWS_ACCESS_KEY_ID=${CI_AWS_ACCESS_KEY_ID:-$AWS_ACCESS_KEY_ID}
    export AWS_SECRET_ACCESS_KEY=${CI_AWS_SECRET_ACCESS_KEY:-$AWS_SECRET_ACCESS_KEY}
    export AWS_SESSION_TOKEN=${CI_AWS_SESSION_TOKEN:-$AWS_SESSION_TOKEN}
    # This one may or may not fail ...
    aws sts get-caller-identity 2>&1 || true

    [ -z "$AWS_ACCESS_KEY_ID" -o -z "$AWS_SECRET_ACCESS_KEY" ] && { echo "AWS_ACCESS_KEY_ID/AWS_SECRET_ACCESS_KEY is not set"; exit 1; }
}

function aws_configure_profile() {
    [ ! -z "$AWS_PROFILE" ] || { echo "No AWS_PROFILE given!";  return 1; }
    [ ! -z "$AWS_ACCESS_KEY_ID" ] || { echo "No AWS_ACCESS_KEY_ID given!"; return 2; }
    [ ! -z "$AWS_SECRET_ACCESS_KEY" ] || { echo "No AWS_SECRET_ACCESS_KEY given!"; return 3; }
    [ ! -z "$AWS_ACCOUNT_TOOLS" ] || { echo "No AWS_ACCOUNT_TOOLS given! Using default ..."; export AWS_ACCOUNT_TOOLS="433714148419"; }
    [ ! -z "$AWS_ACCOUNT_ID" ] || { echo "No AWS_ACCOUNT_ID given! Using default ..."; export AWS_ACCOUNT_ID=$AWS_ACCOUNT_TOOLS; }
    [ ! -z "$AWS_REGION_TOOLS" ] || { echo "No AWS_REGION_TOOLS given! Using default ..."; export AWS_REGION_TOOLS="us-east-2"; }
    [ ! -z "$AWS_ROLE_ARN" ] || { echo "No AWS_ROLE_ARN given! Using default ..."; export AWS_ROLE_ARN="arn:aws:iam::$AWS_ACCOUNT_ID:role/github-terraform-pipelines"; }
    echo "Create AWS_PROFILE=$AWS_PROFILE in ~/.aws/config"
    #set -x
    export PAGER=''
    aws --version
    #set | grep '^(AWS_|GITHUB_|RUNNER_)'

    source_profile=${1:-$AWS_SOURCE_PROFILE}
    aws configure set output json --profile=$AWS_PROFILE 2>&1
    aws configure set region ${AWS_DEFAULT_REGION:-us-east-2} --profile=$AWS_PROFILE 2>&1
    if [ ! -z "$source_profile" ] ; then
        aws configure set role_arn $AWS_ROLE_ARN --profile=$AWS_PROFILE 2>&1
        aws configure set source_profile $source_profile --profile=$AWS_PROFILE 2>&1
    else
        aws configure set aws_access_key_id ${AWS_ACCESS_KEY_ID} --profile=$AWS_PROFILE 2>&1
        aws configure set aws_secret_access_key ${AWS_SECRET_ACCESS_KEY} --profile=$AWS_PROFILE 2>&1
        test -z "${AWS_SESSION_TOKEN}" || aws configure set aws_session_token ${AWS_SESSION_TOKEN} --profile=$AWS_PROFILE 2>&1
    fi
    aws sts get-caller-identity --profile=$AWS_PROFILE 2>&1
    #set +x
    return $?
}

function aws_check_profiles_and_accounts() {
    profiles_and_accounts="$1"

    set +e

    echo "Profiles:"
    aws configure list-profiles 2>&1 || { set; exit $?; }
    echo ""

    echo "~/.aws/config"
    cat ~/.aws/config
    echo ""

    [ -z "$profiles_and_accounts"] || for profile in $profiles_and_accounts ; do
      export AWS_PROFILE=$(echo $profile | cut -d : -f 1)
      export AWS_ACCOUNT_ID=$(echo $profile | cut -d : -f 2)
      aws_configure_profile b2b-master
      RC=$?
      [ 0 -ne $RC ] && exit $RC
    done || true
}
